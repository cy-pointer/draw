@startuml
'scale 2
skinparam titleBorderRoundCorner 15
skinparam titleBorderThickness 2
skinparam titleBorderColor red
skinparam titleBackgroundColor Aqua-CadetBlue

title 项目线索与报备

我的线索 -> 报备: 新增报备
== 新增项目报备 ==
报备  -> 资源库: 选择客户\n资源类型为‘机构’和‘企业’
资源库 --> 报备: 返回资源ID(客户),资源名,资源编码
报备 -> 资源库: 选择合伙人\n资源类型为‘自然人’,审核状态为‘通过’的资源
资源库 --> 报备:返回资源id(合伙人),资源名，省级经理，人员id(省级经理id)
报备 -> 用户信息: 选择商务专员
用户信息 --> 报备: 返回商务专员
报备 -> 组织架构: 选择地址信息
组织架构 --> 报备: 返回地址信息
报备 -> 报备: 填写其它信息保存
报备 -> 报备: 1.校验项目名不能重复\n2.设置项目阶段为‘项目报备’\n3.生成项目编号\n4.设置是否废弃为‘否’\n5.设置项目分配状态为‘待分配’
== 自动分配 ==
报备 -> 项目分配区域: 通过省,市ID去匹配
项目分配区域 -->x 报备: 不唯一条直接返回
项目分配区域 -> 人员职位分配: 唯一，用职位分配id查询
人员职位分配 --> 项目分配区域: 返回分配的'职位id'和'人员id'
人员职位分配 -> 职位表: 用职位id查询
职位表 --> 人员职位分配: 返回部门id
人员职位分配 -->  报备:返回 '职位id','人员id','部门id'
报备 -> 项目分配: 用'项目id'和'人员id'去查询,如果查不到数据则插入项目分配表
项目分配 --> 我的线索: '报备','项目分配'关联,登陆人为项目分配人的项目
== 线索 ==
爬虫 -> 项目爬虫收集: 每天定时把前一天的数据采集过来
项目爬虫收集 -> 项目分配区域: 通过省ID去匹配
项目分配区域 -->x 项目爬虫收集: 不唯一条直接返回
项目分配区域 -> 人员职位分配: 唯一，用职位分配id查询
人员职位分配 --> 项目分配区域: 返回分配的'职位id'和'人员id'
人员职位分配 -> 职位表: 用职位id查询
职位表 --> 人员职位分配: 返回部门id
人员职位分配 -->  项目爬虫收集: 返回 '职位id','人员id','部门id'
项目爬虫收集 --> 报备: 插入项目表
报备 -> 项目分配: 用'项目id'和'人员id'去查询,如果查不到数据则插入项目分配表
项目分配 --> 我的线索: '报备','项目分配'关联,登陆人为项目分配人的项目
== 手工分配 ==

== 废弃 ==
报备 -> 报备: 1.设置'是否废弃'为'Y'\n2.设置'项目审核状态'为'废弃'\n3.设置'废弃人'为'当前登陆用户'

@enduml